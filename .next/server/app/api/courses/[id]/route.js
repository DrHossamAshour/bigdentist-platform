"use strict";(()=>{var e={};e.id=4279,e.ids=[4279],e.modules={53524:e=>{e.exports=require("@prisma/client")},98432:e=>{e.exports=require("bcryptjs")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},14300:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},12781:e=>{e.exports=require("stream")},73837:e=>{e.exports=require("util")},4135:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>m,originalPathname:()=>y,patchFetch:()=>j,requestAsyncStorage:()=>g,routeModule:()=>v,serverHooks:()=>f,staticGenerationAsyncStorage:()=>h,staticGenerationBailout:()=>w});var o={};t.r(o),t.d(o,{DELETE:()=>p,GET:()=>c,PATCH:()=>d});var s=t(95419),n=t(69108),a=t(99678),i=t(78070),u=t(3214),l=t(3205);async function c(e,{params:r}){try{let e=await u._.course.findUnique({where:{id:r.id},include:{instructor:{select:{id:!0,firstName:!0,lastName:!0,avatar:!0}},reviews:{select:{rating:!0}},enrollments:{select:{id:!0}},tags:!0}});if(!e)return i.Z.json({error:"Course not found"},{status:404});let t=e.reviews.length>0?e.reviews.reduce((e,r)=>e+r.rating,0)/e.reviews.length:0,o={...e,avgRating:Math.round(10*t)/10,enrollmentCount:e.enrollments.length,reviewCount:e.reviews.length,reviews:void 0,enrollments:void 0};return i.Z.json(o)}catch(e){return console.error("Error fetching course:",e),i.Z.json({error:"Internal server error"},{status:500})}}async function d(e,{params:r}){try{console.log("Course update request received for ID:",r.id);let t=e.cookies.get("auth-token")?.value;if(!t)return console.log("No auth token found"),i.Z.json({error:"Authentication required"},{status:401});if(!(0,l.WX)(t))return console.log("Invalid token"),i.Z.json({error:"Invalid token"},{status:401});let o=await e.json();console.log("Update data received:",o);let{isPublished:s,isFeatured:n,...a}=o;console.log("isFeatured value:",n,"type:",typeof n),console.log("isPublished value:",s,"type:",typeof s);let c={...a,...void 0!==s&&{isPublished:s},...void 0!==n&&{isFeatured:n}};console.log("Final update payload:",c);let d=await u._.course.update({where:{id:r.id},data:c,include:{instructor:{select:{id:!0,firstName:!0,lastName:!0,avatar:!0}},tags:!0}});return console.log("Course updated successfully:",d.id,"isFeatured:",d.isFeatured),i.Z.json(d)}catch(e){return console.error("Error updating course:",e),i.Z.json({error:"Internal server error"},{status:500})}}async function p(e,{params:r}){try{let t=e.cookies.get("auth-token")?.value;if(!t)return i.Z.json({error:"Authentication required"},{status:401});if(!(0,l.WX)(t))return i.Z.json({error:"Invalid token"},{status:401});return await u._.course.delete({where:{id:r.id}}),i.Z.json({message:"Course deleted successfully"})}catch(e){return console.error("Error deleting course:",e),i.Z.json({error:"Internal server error"},{status:500})}}let v=new s.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/courses/[id]/route",pathname:"/api/courses/[id]",filename:"route",bundlePath:"app/api/courses/[id]/route"},resolvedPagePath:"E:\\BigDentist Website\\app\\api\\courses\\[id]\\route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:g,staticGenerationAsyncStorage:h,serverHooks:f,headerHooks:m,staticGenerationBailout:w}=v,y="/api/courses/[id]/route";function j(){return(0,a.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:h})}},3205:(e,r,t)=>{t.d(r,{RA:()=>l,So:()=>d,WX:()=>c});var o=t(98432),s=t.n(o),n=t(46082),a=t.n(n),i=t(3214);let u=async(e,r)=>await s().compare(e,r),l=e=>a().sign(e,process.env.JWT_SECRET||"fallback-secret",{expiresIn:"7d"}),c=e=>{try{return a().verify(e,process.env.JWT_SECRET||"fallback-secret")}catch(e){return null}},d=async(e,r)=>{let t=await i._.user.findUnique({where:{email:e}});return t&&await u(r,t.password)?t:null}},3214:(e,r,t)=>{t.d(r,{_:()=>s});var o=t(53524);let s=globalThis.prisma??new o.PrismaClient}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),o=r.X(0,[1638,6206,6082],()=>t(4135));module.exports=o})();